---
import "@/assets/main.css";
import Layout from "./BlankLayout.astro";
import PageHeader from "@/components/PageHeader.astro";
import PageFooter from "@/components/PageFooter.astro";
import MainNav from "@/components/MainNav.astro";
import Menu from "@/components/Menu.astro";
import SkipLink from "@/components/SkipLink.astro";
import Toc from "@/components/Toc";

interface Props {
	title: string;
	description?: string;
	collectionName: string;
	collection: any[];
	toc?: {
		depth: number;
		slug: string;
		text: string;
	}[];
}

const { title, description, collectionName = "", collection = [], toc = [] } = Astro.props;
const urlPrefix = "/" + collectionName.toLowerCase();
---

<Layout title={title} description={description}>
	<SkipLink id="main-content" title="Skip to content" />
	<PageHeader>
		<Menu title={collectionName} items={collection} urlPrefix={urlPrefix} slot="mobile-menu" />
	</PageHeader>
	<main id="main-content" class="docs-layout">
		<aside class="docs-menu hidden lg:block">
			<div class="sticky inset-header scroll-y max-h-full">
				<MainNav />
				<Menu title={collectionName} items={collection} urlPrefix={urlPrefix} />
			</div>
		</aside>
		<div class="docs-content">
			<div class="docs-content-body container">
				<div class="sidebar-toc sticky inset-header scroll-y hidden xl:block">
					<Toc toc={toc} label="On this Page" />
				</div>
				<article class="main-content markdown-content">
					<slot />
				</article>
			</div>
		</div>
		{
			!!toc.length && (
				<div class="appbar sticky card xl:hidden">
					<Toc isMobile toc={toc} label="On this Page" />
				</div>
			)
		}
	</main>
	<PageFooter />
</Layout>

<style>
	.appbar {
		--z: var(--layer-3);
		--inset-y: auto 0;
		--card-shadow: none;
		--card-radius: 0;
		--card-padding: 0.5rem;
		--card-bg: var(--docs-menu-bg);
		--card-color: var(--docs-menu-color);
		--btn-stroke: transparent;
		border-block-start: 1px solid
			var(--docs-menu-stroke, color-mix(in srgb, currentcolor 12%, transparent));

		details > :not(summary) {
			max-block-size: 42vh;
			padding: 0.5rem 1rem;
			overflow: auto;
		}
	}

	.docs-content {
		margin-bottom: 2rem;
	}

	.sidebar-toc {
		max-height: min((99vh - var(--page-header-height, 0px)), 100%);
	}

	@media (width >= 1024px) {
		.docs-layout {
			position: relative;
			display: grid;
			grid-template-columns: 320px 1fr 320px;
			grid-template-rows: 1fr auto;
			grid-template-areas:
				"menu content content"
				"menu appbar appbar";
		}

		.docs-content {
			grid-area: content;
		}

		.appbar {
			grid-area: appbar;
		}

		.docs-menu {
			grid-area: menu;
			position: absolute;
			inset: 0;
			border-inline-end: 1px solid
				var(--docs-menu-stroke, color-mix(in srgb, currentcolor 12%, transparent));
			background-color: var(--docs-menu-bg);
			color: var(--docs-menu-color);

			& > .sticky {
				padding: 1.5rem 0.875rem 2.5rem;
			}
		}
	}

	@media (width >= 1440px) {
		.docs-content-body {
			display: grid;
			grid-template-columns: minmax(0px, 1fr) 240px;
			gap: 3rem;
			align-items: start;

			& > .main-content {
				order: -1;
			}
		}
	}

	@media (prefers-color-scheme: dark) {
		html:not([data-theme="light"]) {
			--docs-menu-stroke: transparent;
			--docs-menu-bg: color-mix(in oklab, var(--root-bg) 94%, var(--brand));
		}
	}
</style>
