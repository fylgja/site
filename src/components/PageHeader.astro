---
import Logo from "@/assets/logo.svg?raw";
import Offcanvas from "@/components/Offcanvas.astro";
import DocSearch from "@/components/DocSearch.astro";
import ThemeToggle from "./ThemeToggle.astro";

interface Props {
	hideSearch?: boolean;
}

const currentPath = Astro.url.pathname;
const isCurrentPage = (href: string) => (currentPath === href ? "page" : null);
const { hideSearch = false } = Astro.props;

const menu = [
	{
		label: "Library",
		path: "/library/base",
	},
	{
		label: "Docs",
		path: "/docs",
	},
	{
		label: "Blog",
		path: "/blog",
	},
];

const mobileMenu = menu;
---

<header id="pageHeader" class="page-header sticky" style="--inset-t: -1px; --z: var(--layer-4)">
	<div class="flex align gap" style="--p: 1rem var(--container-gap)">
		<a href="/" class="logo" aria-label="Go back to the Fylgja Homepage">
			<Fragment set:html={Logo} />
		</a>
		{
			!hideSearch && (
				<DocSearch style="--mx: auto 0; --md_mx: 0; --md_size-x: min(100%, 22rem);" />
			)
		}
		<div class="flex align">
			<nav
				id="desktop-menu"
				aria-label="Main Menu"
				class="menu hidden lg:block"
				style="--menu-dir: row"
			>
				{
					menu.map((item) => (
						<a href={item.path} aria-current={isCurrentPage(item.path)} class="btn">
							{item.label}
						</a>
					))
				}
				<ThemeToggle />
			</nav>
			<Offcanvas btnClasses="lg:hidden" style="--p: 0">
				<div class="flex-col h-full">
					<div
						class="menu-header flex gap align flow-unset"
						style="--p: 1rem 1rem 0.5rem"
					>
						<p>Expore More of Fylgja</p>
						<button
							data-close
							aria-label="Close Mobile Menu Drawer"
							style="--btn-stroke: transparent"
						>
							<svg
								xmlns="http://www.w3.org/2000/svg"
								width="24"
								height="24"
								viewBox="0 0 24 24"
								fill="none"
								stroke="currentColor"
								stroke-width="2"
								stroke-linecap="round"
								stroke-linejoin="round"
								><path d="M18 6 6 18"></path><path d="m6 6 12 12"></path></svg
							>
						</button>
					</div>
					<div
						class="flex-col divide-y divide-gap-y scroll-y"
						style="--p: 0.5rem; --grow: 1"
					>
						<div class="menu">
							{
								mobileMenu.map((item) => (
									<a
										href={item.path}
										aria-current={isCurrentPage(item.path)}
										class="btn"
									>
										{item.label}
									</a>
								))
							}
						</div>
						<slot name="mobile-menu" />
					</div>
					<div class="flex align" style="--p: 1rem">
						<a href="" class="btn" aria-label="Checkout the Fylgja Github page">
							<svg
								xmlns="http://www.w3.org/2000/svg"
								width="24"
								height="24"
								viewBox="0 0 24 24"
								fill="none"
								stroke="currentColor"
								stroke-width="2"
								stroke-linecap="round"
								stroke-linejoin="round"
							>
								<path
									d="M15 22v-4a4.8 4.8 0 0 0-1-3.5c3 0 6-2 6-5.5.08-1.25-.27-2.48-1-3.5.28-1.15.28-2.35 0-3.5 0 0-1 0-3 1.5-2.64-.5-5.36-.5-8 0C6 2 5 2 5 2c-.3 1.15-.3 2.35 0 3.5A5.403 5.403 0 0 0 4 9c0 3.5 3 5.5 6 5.5-.39.49-.68 1.05-.85 1.65-.17.6-.22 1.23-.15 1.85v4"
								></path>
								<path d="M9 18c-4.51 2-5-2-7-2"></path></svg
							>
						</a>
						<ThemeToggle />
					</div>
				</div>
			</Offcanvas>
		</div>
	</div>
</header>

<script>
	const pageHeader = document.getElementById("pageHeader") as HTMLElement;
	document.documentElement.style.setProperty(
		"--page-header-height",
		pageHeader.offsetHeight + "px"
	);

	const observer = new IntersectionObserver(
		([e]) => e.target.setAttribute("data-sticky", `${e.intersectionRatio < 1}`),
		{ threshold: 1 }
	);
	observer.observe(pageHeader);
</script>

<style>
	.page-header {
		border-block-end: 1px solid
			var(--page-header-stroke, color-mix(in srgb, currentcolor 10%, transparent));
		background-color: var(--page-header-bg, var(--surface-color));
		color: var(--page-header-color);
	}

	#desktop-menu a[aria-current="page"] {
		--btn-active-bg: var(--brand-fade);
	}

	@media (prefers-color-scheme: dark) {
		html:not([data-theme="light"]) {
			--page-header-stroke: transparent;
			--page-header-bg: color-mix(in oklab, #000 56%, var(--brand));
		}
	}
</style>
