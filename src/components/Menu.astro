---
import { Icon } from "astro-icon/components";

interface Props {
	title: string;
	items: {
		title?: string;
		items: {
			slug: string;
			data: {
				title: string;
			};
		}[];
	}[];
	urlPrefix?: string;
	class?: string;
}

const isCurrentPage = (href: string) => (Astro.url.pathname === href ? "page" : null);
const { title, items, urlPrefix, class: classes } = Astro.props;
---

<nav aria-label={`${title} Nav`} class:list={["menu", classes]}>
	<ul>
		{
			items.map((group) => {
				if (!group.items.length) return;

				if (!group.title) {
					return group.items.map((item) => (
						<li>
							<a
								class="btn w-full"
								href={item.slug ? `${urlPrefix}/${item.slug}` : urlPrefix}
								aria-current={isCurrentPage(
									`${item.slug ? `${urlPrefix}/${item.slug}` : urlPrefix}`
								)}
							>
								{item.data.title}
							</a>
						</li>
					));
				}

				return (
					<li>
						<details open>
							<summary class="list-none btn w-full">
								<span>{group.title}</span>
								<Icon
									name="chevron-down"
									width="20"
									height="20"
									class="flip-rotate transition"
									style="--duration: 300ms"
								/>
							</summary>
							<ul style="--px: 1em 0">
								{group.items.map((item) => (
									<li>
										<a
											class="btn w-full"
											href={`${urlPrefix}/${item.slug}`}
											aria-current={isCurrentPage(
												`${urlPrefix}/${item.slug}`
											)}
										>
											{item.data.title}
										</a>
									</li>
								))}
							</ul>
						</details>
					</li>
				);
			})
		}
	</ul>
</nav>

<style>
	nav details a {
		color: var(--text-color-muted);
		font-size: 0.875em;
		text-decoration: none;

		&:hover {
			color: var(--text-color);
		}

		&[aria-current="page"] {
			--btn-bg: var(--brand);
			--btn-color: var(--on-brand);
			color: var(--btn-color);
		}
	}
</style>
